mdp

module coupon_collector

	numberDraws: [0..1] init 0;
	ret: bool init false;
	coup0: bool init false;
	coup1: bool init false;
	coup2: bool init false;
	coup3: bool init false;
	coup4: bool init false;
	coup5: bool init false;
	coup6: bool init false;
	draw0: [0..6] init 0;
	draw1: [0..6] init 0;
	draw2: [0..6] init 0;
	draw3: [0..6] init 0;
	loc: [0..20] init 0;

	[] (loc = 0) & (coup0 & coup1 & coup2 & coup3 & coup4 & coup5 & coup6) -> (loc' = 1) & (ret' = true);
	[] (loc = 0) & !(coup0 & coup1 & coup2 & coup3 & coup4 & coup5 & coup6) -> (loc' = 2);
	[] (loc = 2) -> 1/7: (draw0' = 0) & (loc' = 3) + 1/7: (draw0' = 1) & (loc' = 3) + 1/7: (draw0' = 2) & (loc' = 3) + 1/7: (draw0' = 3) & (loc' = 3) + 1/7: (draw0' = 4) & (loc' = 3) + 1/7: (draw0' = 5) & (loc' = 3) + 1/7: (draw0' = 6) & (loc' = 3);
	[] (loc = 3) -> 1/7: (draw1' = 0) & (loc' = 19) + 1/7: (draw1' = 1) & (loc' = 19) + 1/7: (draw1' = 2) & (loc' = 19) + 1/7: (draw1' = 3) & (loc' = 19) + 1/7: (draw1' = 4) & (loc' = 19) + 1/7: (draw1' = 5) & (loc' = 19) + 1/7: (draw1' = 6) & (loc' = 19);
	[] (loc = 19) -> 1/7: (draw2' = 0) & (loc' = 20) + 1/7: (draw2' = 1) & (loc' = 20) + 1/7: (draw2' = 2) & (loc' = 20) + 1/7: (draw2' = 3) & (loc' = 20) + 1/7: (draw2' = 4) & (loc' = 20) + 1/7: (draw2' = 5) & (loc' = 20) + 1/7: (draw2' = 6) & (loc' = 20);
	[] (loc = 20) -> 1/7: (draw3' = 0) & (loc' = 4) + 1/7: (draw3' = 1) & (loc' = 4) + 1/7: (draw3' = 2) & (loc' = 4) + 1/7: (draw3' = 3) & (loc' = 4) + 1/7: (draw3' = 4) & (loc' = 4) + 1/7: (draw3' = 5) & (loc' = 4) + 1/7: (draw3' = 6) & (loc' = 4);
	[] (loc = 4) -> (loc' = 5) & (numberDraws' = 1);
	[] (loc = 5) & (draw0 = 0 | draw1 = 0 | draw2 = 0 | draw3 = 0) -> (loc' = 7);
	[] (loc = 5) & (draw0 != 0 & draw1 != 0 & draw2 != 0 & draw3 != 0) -> (loc' = 6);
	[] (loc = 7) -> (loc' = 6) & (coup0' = true);
	[] (loc = 6) & (draw0 = 1 | draw1 = 1 | draw2 = 1 | draw3 = 1) -> (loc' = 9);
	[] (loc = 6) & (draw0 != 1 & draw1 != 1 & draw2 != 1 & draw3 != 1) -> (loc' = 8);
	[] (loc = 9) -> (loc' = 8) & (coup1' = true);
	[] (loc = 8) & (draw0 != 2 & draw1 != 2 & draw2 != 2 & draw3 != 2) -> (loc' = 11);
	[] (loc = 8) & (draw0 = 2 | draw1 = 2 | draw2 = 2 | draw3 = 2) -> (loc' = 10);
	[] (loc = 10) -> (loc' = 11) & (coup2' = true);
	[] (loc = 11) & (draw0 != 3 & draw1 != 3 & draw2 != 3 & draw3 != 3) -> (loc' = 12);
	[] (loc = 11) & (draw0 = 3 | draw1 = 3 | draw2 = 3 | draw3 = 3) -> (loc' = 13);
	[] (loc = 13) -> (loc' = 12) & (coup3' = true);
	[] (loc = 12) & (draw0 != 4 & draw1 != 4 & draw2 != 4 & draw3 != 4) -> (loc' = 15);
	[] (loc = 12) & (draw0 = 4 | draw1 = 4 | draw2 = 4 | draw3 = 4) -> (loc' = 14);
	[] (loc = 14) -> (loc' = 15) & (coup4' = true);
	[] (loc = 15) & (draw0 != 5 & draw1 != 5 & draw2 != 5 & draw3 != 5) -> (loc' = 16);
	[] (loc = 15) & (draw0 = 5 | draw1 = 5 | draw2 = 5 | draw3 = 5) -> (loc' = 17);
	[] (loc = 17) -> (loc' = 16) & (coup5' = true);
	[] (loc = 16) & (draw0 != 6 & draw1 != 6 & draw2 != 6 & draw3 != 6) -> (loc' = 0);
	[] (loc = 16) & (draw0 = 6 | draw1 = 6 | draw2 = 6 | draw3 = 6) -> (loc' = 18);
	[] (loc = 18) -> (loc' = 0) & (coup6' = true);
	[] (loc = 1) -> (loc' = 1);

endmodule
